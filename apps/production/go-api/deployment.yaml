apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-api
  namespace: default
  labels:
    app: go-api
    env: production
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/sync-options: Prune=true,Replace=true
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  replicas: 2
  selector:
    matchLabels:
      app: go-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        app: go-api
        env: production
      annotations:
        kubectl.kubernetes.io/restartedAt: "2025-09-10T12:45:00Z"
    spec:
      containers:
      - name: go-api
        image: sgccr.ccs.tencentyun.com/go-api/go-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        env:
        - name: PORT
          value: "8080"
        - name: APP_ENV
          valueFrom:
            configMapKeyRef:
              name: go-api-config
              key: APP_ENV
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
      imagePullSecrets:
      - name: tcr-secret
